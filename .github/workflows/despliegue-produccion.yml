name: Despliegue a produccion - Nuevo Proyecto

on:
  push:
    branches:
      - main # Se ejecuta en cada push a la rama main del nuevo repo

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Instalar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Instalar dependencias
        run: npm install

      - name: Ejecutar pruebas
        run: npm test

  deploy:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Instalar dependencias (OpenVPN, SSH y sshpass)
        run: |
          sudo apt update -qq > /dev/null 2>&1
          sudo apt install -y -qq openvpn openvpn-systemd-resolved openssh-client sshpass

      - name: Crear archivo de configuración OpenVPN
        run: echo "${{ secrets.OPENVPN_CONFIG }}" > /dev/shm/face-ubb.ovpn

      - name: Conexion a la VPN de la UBB
        uses: kota65535/github-openvpn-connect-action@v3.1.0
        timeout-minutes: 2
        continue-on-error: false
        with:
          config_file: /dev/shm/face-ubb.ovpn
          username: ${{ secrets.OPENVPN_USERNAME }}
          password: ${{ secrets.OPENVPN_PASSWORD }}

      - name: Eliminar archivo de configuración OpenVPN
        if: always()
        run: rm -f /dev/shm/face-ubb.ovpn

      - name: Conexión SSH y Despliegue nuevo proyecto
        timeout-minutes: 3
        run: |
          sshpass -p "${{ secrets.PROD_PASSWORD }}" ssh \
            -q \
            -o StrictHostKeyChecking=no \
            -p ${{ secrets.PROD_PORT }} \
            ${{ secrets.PROD_USER }}@${{ secrets.PROD_HOST }} << 'EOF'
              set -euo pipefail

              # Ir al directorio del proyecto ya clonado
              cd GPS-Deploy/GPS/

              echo "Actualizando código fuente..."
              git fetch origin main
              git reset --hard origin/main

              echo "Instalando dependencias..."
              npm ci

              echo "Arrancando PM2 si es la primera vez..."
             if pm2 describe frontend >/dev/null; then
                echo "El proceso ya existe, reiniciando..."
                pm2 restart frontend
             else
                echo "El proceso no existe, iniciando por primera vez..."
                pm2 start src/index.js --backend
                pm2 save
            fi
          EOF